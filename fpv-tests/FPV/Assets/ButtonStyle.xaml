<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="ButtonStyleWindow"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconOnlyButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="{StaticResource SettingsIconBrush}" />
        <Setter Property="Height"
                Value="{Binding FontSize, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Width"
                Value="{Binding FontSize, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Path Fill="{TemplateBinding Foreground}"
                              Data="{TemplateBinding Content}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsNavBackButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness"
                Value="0,0,0,0.6" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Foreground"
                Value="{DynamicResource BackIconBrush}" />
        <Setter Property="FontFamily"
                Value="Brutal Type" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="Height"
                Value="60" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Content"
                Value="BACK TO HOME" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>


                            <Path Name="BackIcon"
                                  Height="15"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Data="{DynamicResource BackIcon}"
                                  Fill="{DynamicResource BackIconBrush}"
                                  Stretch="Uniform" />

                            <Rectangle Grid.Column="1"
                                       Fill="{DynamicResource BorderBrush}"
                                       Width="1"
                                       Height="30"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <ContentPresenter Grid.Column="2"
                                              Margin="20,0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource ColorLightBlack}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource CaptionFontBrush}" />
                            <Setter TargetName="BackIcon"
                                    Property="Fill"
                                    Value="{DynamicResource IconActiveBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyleDefault"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource ColorSilver}" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0.8"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{DynamicResource IconActiveBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource ColorSilver}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{DynamicResource InactiveFontBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>